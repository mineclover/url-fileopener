{
  "Effect pipe": {
    "prefix": "epipe",
    "body": [
      "${1:value}.pipe(",
      "  ${2:Effect.map}(${3:fn}),",
      "  ${0}",
      ")"
    ],
    "description": "Effect pipe with common operations"
  },
  "Effect gen": {
    "prefix": "egen",
    "body": [
      "Effect.gen(function* () {",
      "  ${0}",
      "})"
    ],
    "description": "Effect generator function"
  },
  "Effect main": {
    "prefix": "emain",
    "body": [
      "const main = Effect.gen(function* () {",
      "  ${0}",
      "})",
      "",
      "Effect.runPromise(main)"
    ],
    "description": "Effect main function"
  },
  "Effect tryPromise": {
    "prefix": "etry",
    "body": [
      "Effect.tryPromise({",
      "  try: () => ${1:promise},",
      "  catch: (error) => ${2:new Error(String(error))}",
      "})"
    ],
    "description": "Effect tryPromise with error handling"
  },
  "CLI Command": {
    "prefix": "clicommand",
    "body": [
      "const ${1:commandName} = Command.make(\"${2:command-name}\", {",
      "  ${3:args}: Args.${4:text}({ name: \"${5:arg-name}\" }),",
      "}).pipe(",
      "  Command.withHandler(({ ${3:args} }) =>",
      "    Effect.gen(function* () {",
      "      ${0}",
      "    })",
      "  )",
      ")"
    ],
    "description": "CLI Command definition"
  }
}